---
name: Publish release to GitHub and push package to PyPI
on:
  pull_request:
    branches: [main]
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1.1.7
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-ansi --no-root
      - name: Install library
        run: poetry install --no-interaction --no-ansi
      - name: Build Python package
        run: poetry build

  release:
    name: Create Semantic Release
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        run: "semantic release publish"
        if: startsWith(github.ref, 'refs/tags/')

  # publish_gh:
  #   name: "Publish to GitHub"
  #   runs-on: "ubuntu-20.04"
  #   if: "startsWith(github.ref, 'refs/tags/v')"
  #   steps:
  #     - name: "Check out repository code"
  #       uses: "actions/checkout@v2"
  #     - name: "Set up Python"
  #       uses: "actions/setup-python@v2"
  #       with:
  #         python-version: "3.9"
  #     - name: "Install Python Packages"
  #       run: "pip install poetry"
  #     - name: "Set env"
  #       run: "echo RELEASE_VERSION=${GITHUB_REF:10} >> $GITHUB_ENV"
  #     - name: "Run Poetry Version"
  #       run: "poetry version $RELEASE_VERSION"
  #     - name: "Run Poetry Build"
  #       run: "poetry build"
  #     - name: "Upload binaries to release"
  #       uses: "svenstaro/upload-release-action@v2"
  #       with:
  #         repo_token: "${{ secrets.NTC_GITHUB_TOKEN }}"
  #         file: "dist/*"
  #         tag: "${{ github.ref }}"
  #         overwrite: true
  #         file_glob: true
  #   needs:
  #     - "unittest"
  # publish_pypi:
  #   name: "Push Package to PyPI"
  #   runs-on: "ubuntu-20.04"
  #   if: "startsWith(github.ref, 'refs/tags/v')"
  #   steps:
  #     - name: "Check out repository code"
  #       uses: "actions/checkout@v2"
  #     - name: "Set up Python"
  #       uses: "actions/setup-python@v2"
  #       with:
  #         python-version: "3.9"
  #     - name: "Install Python Packages"
  #       run: "pip install poetry"
  #     - name: "Set env"
  #       run: "echo RELEASE_VERSION=${GITHUB_REF:10} >> $GITHUB_ENV"
  #     - name: "Run Poetry Version"
  #       run: "poetry version $RELEASE_VERSION"
  #     - name: "Run Poetry Build"
  #       run: "poetry build"
  #     - name: "Push to PyPI"
  #       uses: "pypa/gh-action-pypi-publish@release/v1"
  #       with:
  #         user: "__token__"
  #         password: "${{ secrets.PYPI_API_TOKEN }}"
  #   needs:
  #     - "unittest"
